<div class="search-box">
  <div class="row">
    <input type="text" id="input-box" placeholder="Search" autocomplete="off" />
    <svg
      xmlns="http://www.w3.org/2000/svg"
      class="input-icon"
      height="20px"
      width="20px"
      viewBox="0 0 20 20"
      fill="currentColor"
    >
      <path
        fill-rule="evenodd"
        d="M8 4a4 4 0 100 8 4 4 0 000-8zM2 8a6 6 0 1110.89 3.476l4.817 4.817a1 1 0 01-1.414 1.414l-4.816-4.816A6 6 0 012 8z"
        clip-rule="evenodd"></path>
    </svg>
  </div>
  <div id="result-box" class="result-box custom-scrollbar"></div>
</div>
<script>
  import tools from '../../assets/tools.json';
  import type { Tool } from '../../models/Tool';

  const resultsBox = document.querySelector('.result-box');
  const inputBox = document.getElementById('input-box') as HTMLInputElement;

  if (inputBox) {
    const searchFunction = function () {
      let input = inputBox.value.toLowerCase();
      let result: Tool[] = [];
      result = tools.filter((tool) => {
        return tool.name.toLowerCase().includes(input.toLowerCase());
      });
      display(result);
      if (!result.length && resultsBox) {
        resultsBox.innerHTML = '';
      }
    };
    let isMouseOverInput = false;
    let isMouseOverResults = false;
    const clearResults = function () {
      if (resultsBox) {
        resultsBox.innerHTML = '';
      }
    };
    const checkAndClearResults = function () {
      // Only clear if mouse is not over either element
      if (!isMouseOverInput && !isMouseOverResults) {
        clearResults();
      }
    };
    inputBox.addEventListener('keyup', searchFunction);
    inputBox.addEventListener('mouseenter', function () {
      isMouseOverInput = true;
      searchFunction();
    });
    inputBox.addEventListener('mouseleave', function () {
      isMouseOverInput = false;
      setTimeout(checkAndClearResults, 150); // Small delay to allow mouse to move to results
    });
    resultsBox.addEventListener('mouseenter', function () {
      isMouseOverResults = true;
    });
    resultsBox.addEventListener('mouseleave', function () {
      isMouseOverResults = false;
      setTimeout(checkAndClearResults, 150); // Small delay to allow mouse to move to results
    });
  }
  function display(result: Tool[]) {
    const content = result.map((tool) => {
      return `<li>${tool.name}</li>`;
    });
    if (resultsBox) {
      resultsBox.innerHTML = `<ul>${content.join('')}</ul>`;
    }
    result.forEach((tool, index) => {
      const list = resultsBox?.querySelector(
        'li:nth-child(' + (index + 1) + ')'
      ) as HTMLLIElement;
      list.onclick = function () {
        selectInput(list);
      };
    });
  }
  function selectInput(list: HTMLLIElement) {
    tools.forEach((tool) => {
      if (tool.name === list.innerText) {
        const basePath = import.meta.env.BASE_URL;
        location.href = basePath + tool.path;
      }
    });
    inputBox.value = list.innerText;
    if (resultsBox) {
      resultsBox.innerHTML = '';
    }
  }
</script>
